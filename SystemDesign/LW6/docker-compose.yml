version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      - postgres
      - mongo
      - redis
      - kafka
    environment:
      - DATABASE_URL=postgresql://stud:Zaq123edc@127.0.0.1:47292/t_db
      - MONGO_URL=mongodb://localhost:27017
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER_URL=kafka:9092
    ports:
      - "8000:8000"
    command: bash -c "python /app/LW4.py && uvicorn main:app --host 0.0.0.0 --port 8000"

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: consumer
    command: ["python", "consumer.py"]
    environment:
      - DATABASE_URL=postgresql://stud:Zaq123edc@127.0.0.1:47292/t_db
      - KAFKA_BROKER_URL=kafka:9092
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: stud
      POSTGRES_PASSWORD: Zaq123edc
      POSTGRES_DB: t_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  mongo:
    image: mongodb/mongodb-community-server:5.0.19-ubuntu2004
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    command: mongod --bind_ip_all

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_NAME: "kafka-cluster"
    depends_on:
      - kafka

networks:
  monitoring:
    driver: bridge

volumes:
  postgres_data:
  mongo_data: